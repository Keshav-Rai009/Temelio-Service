package com.temelio.controller;

import java.util.UUID;

import com.temelio.api.NonProfitsAPI;
import com.temelio.model.domain.NonProfit;
import com.temelio.service.NonProfitsService;
import jakarta.annotation.security.RolesAllowed;
import jakarta.ws.rs.GET;
import jakarta.ws.rs.PUT;
import jakarta.ws.rs.Path;
import jakarta.ws.rs.PathParam;
import jakarta.ws.rs.core.Response;


@RolesAllowed("ADMIN")
public class NonProfitsController implements NonProfitsAPI {

	private final NonProfitsService nonProfitsService;

	public NonProfitsController(final NonProfitsService nonProfitsService) {
		this.nonProfitsService = nonProfitsService;
	}


	/**
	 * @return the list of all nonprofits
	 */
	@Override
	public Response getNonProfits() {
		return this.nonProfitsService.getNonProfits();
	}

	/**
	 * Creates a new nonprofit (id is autogenerated)
	 */
	@Override
	public Response addNonProfit(final NonProfit nonProfit) {
		return this.nonProfitsService.addNonProfit(nonProfit);
	}

	/**
	 * @retuns a nonprofit by id
	 * @param: Non Profit id
	 */
	@Override
	@GET
	@Path("/{id}")
	public Response getNonProfit(@PathParam("id") final UUID nonProfitId) {
		return this.nonProfitsService.getNonProfit(nonProfitId);
	}

	/**
	 * Updates a nonprofit by id
	 *
	 * @param: Non Profit id
	 */
	@Override
	@PUT
	@Path("/{id}")
	public final Response updateNonProfit(@PathParam("id") final UUID nonProfitId,
	                                      final NonProfit nonProfit) {
		return this.nonProfitsService.updateNonProfit(nonProfitId, nonProfit);
	}
}